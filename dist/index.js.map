{"version":3,"sources":["../index.js"],"names":["compose","actionReducer","actionHandler","actionCreator","connect","create","actions","actionHandlers","actionReducers","commonSelectors","defaultSelector","x","types","init","dispatch","uniqueId","Date","getTime","createStateMapper","prop","substr","state","props","defaultMiddleware","store","action","handler","toString","next","reducer","type","name","options","actionMetadata","creator","payload","extraProps","Object","assign","actionCreators","entries","forEach","pair","mapStateToProps","args","split","structuredSelector","originalConnect","initialState","currentReducer","lazyDispatch","defaultReducer","actionResult","setTimeout","middlewares","applyMiddleware","concat","app","prevReducer","Provider","React","createElement"],"mappings":"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","file":"index.js","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport React from \"react\";\r\nimport { connect as originalConnect, Provider } from \"react-redux\";\r\nimport { createSelector, createStructuredSelector } from \"reselect\";\r\n\r\nconst actions = {};\r\nconst actionHandlers = {};\r\nconst actionReducers = {};\r\nconst commonSelectors = {};\r\nconst defaultSelector = x => x;\r\nconst types = {\r\n  init: \"@@init\",\r\n  dispatch: \"@@dispatch\"\r\n};\r\nlet uniqueId = new Date().getTime();\r\n\r\nfunction createStateMapper(prop) {\r\n  if (prop[0] === \"@\") {\r\n    prop = prop.substr(1);\r\n    return (state, props) => props[prop];\r\n  }\r\n  return state => state[prop];\r\n}\r\n\r\nfunction defaultMiddleware(store) {\r\n  return next => action => {\r\n    if (action.handler && action.handler.toString() in actionHandlers) {\r\n      return actionHandlers[action.handler](store, next, action);\r\n    }\r\n    return next(action);\r\n  };\r\n}\r\n\r\nexport { compose } from \"redux\";\r\n\r\n/**\r\n * register dynamic action reducer\r\n * @param reducer\r\n * @returns {string}\r\n */\r\nexport function actionReducer(reducer) {\r\n  if (typeof reducer !== \"function\") {\r\n    reducer = combineReducers(reducer);\r\n  }\r\n\r\n  if (!reducer.type) {\r\n    reducer.type = `@@${reducer.name}_${uniqueId++}`;\r\n  }\r\n\r\n  actionReducers[reducer.type] = reducer;\r\n\r\n  return reducer.type;\r\n}\r\n\r\n/**\r\n * register dynamic action handler\r\n * @param handler\r\n */\r\nexport function actionHandler(handler) {\r\n  if (!handler.type) {\r\n    handler.type = `@@${handler.name}_${uniqueId++}`;\r\n  }\r\n\r\n  actionHandlers[handler.type] = handler;\r\n\r\n  return handler.type;\r\n}\r\n\r\nexport function actionCreator(action, options = {}) {\r\n  // single action creator\r\n  if (typeof action === \"function\") {\r\n    if (!action.type) {\r\n      action.type = `@@${action.name}_${uniqueId++}`;\r\n    }\r\n    let actionMetadata = actions[action.type];\r\n    if (!actionMetadata) {\r\n      actions[action.type] = actionMetadata = {\r\n        handler: action,\r\n        creator(payload, extraProps) {\r\n          return Object.assign(\r\n            { type: action.type, payload },\r\n            options,\r\n            extraProps\r\n          );\r\n        }\r\n      };\r\n    }\r\n\r\n    return actionMetadata.creator;\r\n  }\r\n  // support multiple action creators\r\n  const actionCreators = {};\r\n  Object.entries(action).forEach(\r\n    pair => (actionCreators[pair[0]] = actionCreator(pair[1], options))\r\n  );\r\n  return actionCreators;\r\n}\r\n\r\nexport function connect(mapStateToProps, ...args) {\r\n  if (mapStateToProps) {\r\n    // support named props\r\n    if (typeof mapStateToProps === \"string\") {\r\n      const props = mapStateToProps.split(/\\s+/);\r\n      const structuredSelector = {};\r\n      props.forEach(\r\n        prop =>\r\n          (structuredSelector[prop[0] === \"@\" ? prop.substr(1) : prop] =\r\n            commonSelectors[prop] ||\r\n            (commonSelectors[prop] = createSelector(\r\n              createStateMapper(prop),\r\n              defaultSelector\r\n            )))\r\n      );\r\n      mapStateToProps = structuredSelector;\r\n    }\r\n    if (typeof mapStateToProps !== \"function\") {\r\n      return originalConnect(\r\n        createStructuredSelector(mapStateToProps),\r\n        ...args\r\n      );\r\n    }\r\n  }\r\n\r\n  return originalConnect(mapStateToProps, ...args);\r\n}\r\n\r\nexport function create(initialState = {}, ...middlewares) {\r\n  let currentReducer;\r\n\r\n  const lazyDispatch = (state, ...actions) => {\r\n    return { type: types.dispatch, state, actions };\r\n  };\r\n  const defaultReducer = (state = initialState, action) => {\r\n    // is custom action\r\n    if (action.type in actions) {\r\n      const actionHandler = actions[action.type].handler;\r\n      const actionResult = actionHandler(state, action.payload, lazyDispatch);\r\n\r\n      if (actionResult && actionResult.type === types.dispatch) {\r\n        setTimeout(() => {\r\n          actionResult.actions.forEach(action => store.dispatch(action));\r\n        }, 0);\r\n        state = actionResult.state;\r\n      } else {\r\n        state = actionResult;\r\n      }\r\n    }\r\n\r\n    if (action.reducer in actionReducers) {\r\n      const actionReducer = actionReducers[action.reducer];\r\n      state = actionReducer(state, action);\r\n    }\r\n\r\n    return currentReducer ? currentReducer(state, action) : state;\r\n  };\r\n\r\n  const store = createStore(\r\n    defaultReducer,\r\n    applyMiddleware(...[defaultMiddleware].concat(middlewares))\r\n  );\r\n\r\n  const app = Object.assign({}, store, {\r\n    // register reducer\r\n    reducer(reducer) {\r\n      if (typeof reducer !== \"function\") {\r\n        reducer = combineReducers(reducer);\r\n      }\r\n      if (currentReducer) {\r\n        const prevReducer = currentReducer;\r\n        currentReducer = (state, action) =>\r\n          reducer(prevReducer(state, action), action);\r\n      } else {\r\n        currentReducer = reducer;\r\n      }\r\n\r\n      // dispatch init method after reducer added\r\n      store.dispatch({ type: types.init });\r\n    },\r\n    Provider(props) {\r\n      return React.createElement(\r\n        Provider,\r\n        Object.assign({ store: app }, props)\r\n      );\r\n    }\r\n  });\r\n\r\n  return app;\r\n}\r\n\r\nexport default create;\r\n"]}