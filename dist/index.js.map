{"version":3,"sources":["../index.js"],"names":["compose","actionReducer","actionHandler","actionCreator","connect","create","withReducer","actions","actionHandlers","actionReducers","commonSelectors","defaultSelector","x","types","init","dispatch","uniqueId","Date","getTime","generateType","obj","type","name","createStateMapper","prop","substr","state","props","defaultMiddleware","store","action","handler","toString","next","reducer","options","actionMetadata","creator","payload","extraProps","Object","assign","actionCreators","entries","forEach","pair","mapStateToProps","args","split","structuredSelector","originalConnect","initialState","currentReducer","registeredReducers","lazyDispatch","defaultReducer","actionResult","setTimeout","middlewares","applyMiddleware","concat","app","prevReducer","Provider","React","createElement","WrappedComponent","ReducerInjector","context","Component","contextTypes","PropTypes","object","isRequired","displayName"],"mappings":"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","file":"index.js","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport React from \"react\";\r\nimport { connect as originalConnect, Provider } from \"react-redux\";\r\nimport { createSelector, createStructuredSelector } from \"reselect\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst actions = {};\r\nconst actionHandlers = {};\r\nconst actionReducers = {};\r\nconst commonSelectors = {};\r\nconst defaultSelector = x => x;\r\nconst types = {\r\n  init: \"@@init\",\r\n  dispatch: \"@@dispatch\"\r\n};\r\nlet uniqueId = new Date().getTime();\r\n\r\nfunction generateType(obj) {\r\n  if (!obj.type) {\r\n    obj.type = `@@${obj.name}_${uniqueId++}`;\r\n  }\r\n}\r\n\r\nfunction createStateMapper(prop) {\r\n  if (prop[0] === \"@\") {\r\n    prop = prop.substr(1);\r\n    return (state, props) => props[prop];\r\n  }\r\n  return state => state[prop];\r\n}\r\n\r\nfunction defaultMiddleware(store) {\r\n  return next => action => {\r\n    if (action.handler && action.handler.toString() in actionHandlers) {\r\n      return actionHandlers[action.handler](store, next, action);\r\n    }\r\n    return next(action);\r\n  };\r\n}\r\n\r\nexport { compose } from \"redux\";\r\n\r\n/**\r\n * register dynamic action reducer\r\n * @param reducer\r\n * @returns {string}\r\n */\r\nexport function actionReducer(reducer) {\r\n  if (typeof reducer !== \"function\") {\r\n    reducer = combineReducers(reducer);\r\n  }\r\n\r\n  generateType(reducer);\r\n\r\n  actionReducers[reducer.type] = reducer;\r\n\r\n  return reducer.type;\r\n}\r\n\r\n/**\r\n * register dynamic action handler\r\n * @param handler\r\n */\r\nexport function actionHandler(handler) {\r\n  generateType(handler);\r\n\r\n  actionHandlers[handler.type] = handler;\r\n\r\n  return handler.type;\r\n}\r\n\r\nexport function actionCreator(action, options = {}) {\r\n  // single action creator\r\n  if (typeof action === \"function\") {\r\n    generateType(action);\r\n\r\n    let actionMetadata = actions[action.type];\r\n    if (!actionMetadata) {\r\n      actions[action.type] = actionMetadata = {\r\n        handler: action,\r\n        creator(payload, extraProps) {\r\n          return Object.assign(\r\n            { type: action.type, payload },\r\n            options,\r\n            extraProps\r\n          );\r\n        }\r\n      };\r\n    }\r\n\r\n    return actionMetadata.creator;\r\n  }\r\n  // support multiple action creators\r\n  const actionCreators = {};\r\n  Object.entries(action).forEach(\r\n    pair => (actionCreators[pair[0]] = actionCreator(pair[1], options))\r\n  );\r\n  return actionCreators;\r\n}\r\n\r\nexport function connect(mapStateToProps, ...args) {\r\n  if (mapStateToProps) {\r\n    // support named props\r\n    if (typeof mapStateToProps === \"string\") {\r\n      const props = mapStateToProps.split(/\\s+/);\r\n      const structuredSelector = {};\r\n      props.forEach(\r\n        prop =>\r\n          (structuredSelector[prop[0] === \"@\" ? prop.substr(1) : prop] =\r\n            commonSelectors[prop] ||\r\n            (commonSelectors[prop] = createSelector(\r\n              createStateMapper(prop),\r\n              defaultSelector\r\n            )))\r\n      );\r\n      mapStateToProps = structuredSelector;\r\n    }\r\n    if (typeof mapStateToProps !== \"function\") {\r\n      return originalConnect(\r\n        createStructuredSelector(mapStateToProps),\r\n        ...args\r\n      );\r\n    }\r\n  }\r\n\r\n  return originalConnect(mapStateToProps, ...args);\r\n}\r\n\r\nexport function create(initialState = {}, ...middlewares) {\r\n  let currentReducer;\r\n  const registeredReducers = {};\r\n\r\n  const lazyDispatch = (state, ...actions) => {\r\n    return { type: types.dispatch, state, actions };\r\n  };\r\n  const defaultReducer = (state = initialState, action) => {\r\n    // is custom action\r\n    if (action.type in actions) {\r\n      const actionHandler = actions[action.type].handler;\r\n      const actionResult = actionHandler(state, action.payload, lazyDispatch);\r\n\r\n      if (actionResult && actionResult.type === types.dispatch) {\r\n        setTimeout(() => {\r\n          actionResult.actions.forEach(action => store.dispatch(action));\r\n        }, 0);\r\n        state = actionResult.state;\r\n      } else {\r\n        state = actionResult;\r\n      }\r\n    }\r\n\r\n    if (action.reducer in actionReducers) {\r\n      const actionReducer = actionReducers[action.reducer];\r\n      state = actionReducer(state, action);\r\n    }\r\n\r\n    return currentReducer ? currentReducer(state, action) : state;\r\n  };\r\n\r\n  const store = createStore(\r\n    defaultReducer,\r\n    applyMiddleware(...[defaultMiddleware].concat(middlewares))\r\n  );\r\n\r\n  const app = Object.assign({}, store, {\r\n    // register reducer\r\n    reducer(reducer) {\r\n      if (typeof reducer !== \"function\") {\r\n        reducer = combineReducers(reducer);\r\n      }\r\n\r\n      generateType(reducer);\r\n\r\n      if (reducer.type in registeredReducers) return;\r\n\r\n      registeredReducers[reducer.type] = true;\r\n\r\n      if (currentReducer) {\r\n        const prevReducer = currentReducer;\r\n        currentReducer = (state, action) =>\r\n          reducer(prevReducer(state, action), action);\r\n      } else {\r\n        currentReducer = reducer;\r\n      }\r\n\r\n      // dispatch init method after reducer added\r\n      store.dispatch({ type: types.init });\r\n    },\r\n    Provider(props) {\r\n      return React.createElement(\r\n        Provider,\r\n        Object.assign({ store: app }, props)\r\n      );\r\n    }\r\n  });\r\n\r\n  return app;\r\n}\r\n\r\nexport function withReducer(reducer) {\r\n  if (typeof reducer !== \"function\") {\r\n    reducer = combineReducers(reducer);\r\n  }\r\n\r\n  return function(WrappedComponent) {\r\n    class ReducerInjector extends React.Component {\r\n      render() {\r\n        this.context.store.reducer(reducer);\r\n        return React.createElement(WrappedComponent, this.props);\r\n      }\r\n    }\r\n\r\n    ReducerInjector.contextTypes = {\r\n      store: PropTypes.object.isRequired\r\n    };\r\n\r\n    ReducerInjector.displayName = `withReducer(${WrappedComponent.displayName ||\r\n      WrappedComponent.name ||\r\n      \"Component\"})`;\r\n    return ReducerInjector;\r\n  };\r\n}\r\n\r\nexport default create;\r\n"]}